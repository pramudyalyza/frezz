{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\BINUS\\\\SEM 3\\\\Artificial Intelligence\\\\project-ai\\\\src\\\\App.js\";\nimport { PropTypes } from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport AlertDismissable from './components/AlertDismissable';\nimport Routes from './Routes';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dismissUpdateAlert = event => {\n      this.setState({\n        showUpdateAlert: false\n      });\n    };\n\n    const reloadMsg = `\n      New content is available.<br />\n      Please <a href='javascript:location.reload();'>reload</a>.<br />\n      <small>If reloading doesn't work, close all tabs/windows of this web application,\n      and then reopen the application.</small>\n    `;\n    this.state = {\n      showUpdateAlert: true,\n      reloadMsg: reloadMsg\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      collapseOnSelect: true,\n      className: \"app-nav-bar\",\n      variant: \"dark\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"What's Fresh & What's Rotten?\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Let's Classify!\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, \"About\")), this.props.updateAvailable && this.state.showUpdateAlert && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AlertDismissable, {\n      title: \"\",\n      variant: \"info\",\n      message: this.state.reloadMsg,\n      show: this.props.updateAvailable && this.state.showUpdateAlert,\n      onClose: this.dismissUpdateAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nApp.propTypes = {\n  updateAvailable: PropTypes.bool.isRequired\n};\nexport default withRouter(App);","map":{"version":3,"sources":["C:/Coding/BINUS/SEM 3/Artificial Intelligence/project-ai/src/App.js"],"names":["PropTypes","React","Component","Link","withRouter","Container","Nav","Navbar","AlertDismissable","Routes","App","constructor","props","dismissUpdateAlert","event","setState","showUpdateAlert","reloadMsg","state","render","updateAvailable","paddingTop","propTypes","bool","isRequired"],"mappings":";AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,QAAuC,iBAAvC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAE1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,kBAdmB,GAcEC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACD,KAhBkB;;AAEjB,UAAMC,SAAS,GAAI;;;;;KAAnB;AAMA,SAAKC,KAAL,GAAa;AACXF,MAAAA,eAAe,EAAE,IADN;AAEXC,MAAAA,SAAS,EAAEA;AAFA,KAAb;AAID;;AAMDE,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,gBAAgB,MAAxB;AAAyB,MAAA,SAAS,EAAC,aAAnC;AAAiD,MAAA,OAAO,EAAC,MAAzD;AAAgE,MAAA,MAAM,EAAC,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,EAAE,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,eAIM,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,EAAE,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJN,CADF,EAYI,KAAKP,KAAL,CAAWQ,eAAX,IAA8B,KAAKF,KAAL,CAAWF,eAAzC,iBACA;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAC,EADR;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWD,SAHtB;AAIE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWQ,eAAX,IAA8B,KAAKF,KAAL,CAAWF,eAJjD;AAKE,MAAA,OAAO,EAAE,KAAKH,kBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbJ,CADF,eAwBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBF,CADJ;AA8BD;;AAnDyB;;AAsD5BH,GAAG,CAACY,SAAJ,GAAgB;AACdF,EAAAA,eAAe,EAAEpB,SAAS,CAACuB,IAAV,CAAeC;AADlB,CAAhB;AAIA,eAAepB,UAAU,CAACM,GAAD,CAAzB","sourcesContent":["import { PropTypes } from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport AlertDismissable from './components/AlertDismissable';\nimport Routes from './Routes';\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    const reloadMsg = `\n      New content is available.<br />\n      Please <a href='javascript:location.reload();'>reload</a>.<br />\n      <small>If reloading doesn't work, close all tabs/windows of this web application,\n      and then reopen the application.</small>\n    `;\n    this.state = {\n      showUpdateAlert: true,\n      reloadMsg: reloadMsg\n    };\n  }\n\n  dismissUpdateAlert = event => {\n    this.setState({ showUpdateAlert: false });\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Container>\n            <Navbar collapseOnSelect className=\"app-nav-bar\" variant=\"dark\" expand=\"lg\">\n              <Navbar.Brand href=\"#\">What's Fresh & What's Rotten?</Navbar.Brand>\n              {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" /> */}\n              <Link className=\"nav-link\" to=\"/\">Let's Classify!</Link>\n                  <Link className=\"nav-link\" to=\"/about\">About</Link>\n              {/* <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav>\n                  \n                </Nav>\n              </Navbar.Collapse> */}\n            </Navbar>\n            { this.props.updateAvailable && this.state.showUpdateAlert &&\n              <div style={{paddingTop: '10px'}}>\n                <AlertDismissable\n                  title=\"\"\n                  variant=\"info\"\n                  message={this.state.reloadMsg}\n                  show={this.props.updateAvailable && this.state.showUpdateAlert}\n                  onClose={this.dismissUpdateAlert} />\n              </div>\n            }\n          </Container>\n          <Container>\n            <Routes />\n          </Container>\n        </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  updateAvailable: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}